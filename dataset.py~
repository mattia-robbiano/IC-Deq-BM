#
# Simple functions to get a Bars and Stripes sample. Each one represent "visually" a 3x3 matrix with 8 different patterns of bars and stripes, flattened to a bitstring.
# When function get_sample is called we extract a number from a probability distribution, randomly picking a bin in the [0,1] interval, binned uniformly.
# Each bin correspond to a different configuration of bars and stripes, built by get_sample
#

import numpy as np

def extract_sample():

    gaussian = np.random.normal(loc=3.5, scale=1., size=None)
    bin = np.clip(np.round(gaussian).astype(int),0,7)

    return get_sample(k=bin).reshape(9)

def get_sample(k):

    sample = np.zeros(shape=(3,3))
    if   k==0:
        sample[0,:] = 1
    elif k==1:
        sample[1,:] = 1
    elif k==2:
        sample[2,:] = 1
    elif k==3:
        sample[:,0] = 1
    elif k==4:
        sample[:,1] = 1
    elif k==5:
        sample[:,2] = 1
    elif k==6:
        sample[0,:] = 1
        sample[2,:] = 1
    elif k==7:
        sample[:,0] = 1
        sample[:,2] = 1

    return sample
